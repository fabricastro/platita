// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?
  salary        Float     @default(0)
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  expenses  Expense[]
  savings   Saving[]
  wishlist  WishItem[]
  extraIncome  ExtraIncome[]
  accounts  Account[]
  sessions  Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Expense {
  id          String   @id @default(cuid())
  description String
  amount      Float
  category    String
  date        DateTime
  type        String   @default("unico") // "unico" o "tarjeta"
  
  // Campos específicos para gastos de tarjeta
  installments       Int?   // Número total de cuotas
  currentInstallment Int?   // Cuota actual (para tracking)
  totalAmount        Float? // Monto total del gasto (antes de dividir en cuotas)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("expenses")
}

model Saving {
  id          String   @id @default(cuid())
  description String
  amount      Float
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("savings")
}

model WishItem {
  id       String @id @default(cuid())
  item     String
  price    Float
  priority String
  saved    Float  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("wish_items")
}

model ExtraIncome {
  id          String   @id @default(cuid())
  description String
  amount      Float
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("extra_income")
}
